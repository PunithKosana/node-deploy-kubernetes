name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: |
          docker build -t my-docker-image:${GITHUB_SHA} .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push my-docker-image:${GITHUB_SHA}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures the deployment runs after the build job completes
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'  # Set your AWS region

      - name: Set up kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.24.3/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up Kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name node-cluster --region ap-south-1

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/my-app-deployment my-app=my-docker-image:${GITHUB_SHA} --record
          kubectl rollout status deployment/my-app-deployment
